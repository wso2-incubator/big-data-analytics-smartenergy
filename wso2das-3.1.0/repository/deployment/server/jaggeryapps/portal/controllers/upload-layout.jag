<%
/**
 * Copyright 2016 WSO2, Inc. (http://wso2.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This is the controller for upload layout.
 */

var errorMessage;
var assetType = "layout";
var configs = require('/configs/designer.json');
(function () {
    errorMessage = request.getParameter("message");
    var permission = require('/modules/permission.js');
    var constants = require('/modules/constants.js');
    var possibleErrorMessages = ["success", "confgurationFileMissing", "idAlreadyExists", "fileNotFound",
        "MaxFileLimitExceeded", "notaZipFile", "errorInUpload"];
    var i18n = require("i18n");
    i18n.init(request, utils.getLocaleResourcePath());

    if (!user) {
        sendLogin();
        return;
    }
    if (userDomain !== (urlDomain || superDomain)) {
        response.sendError(401, i18n.localize("designer.access.not.authorized.for.tenant"));
        return;
    }
    if (!utils.allowed(user.roles, configs.designers)) {
        response.sendError(401, i18n.localize("designer.access.not.authorized"));
        return;
    }

    // Sanitize the input before passing it to the template file
    for (var index = 0; index < possibleErrorMessages.length; index++) {
        if (errorMessage === possibleErrorMessages[index]) {
            break;
        }
        if (index === possibleErrorMessages.length - 1) {
            errorMessage = null;
        }
    }

    if (permission.isAllowed(constants.LAYOUT_UPLOAD)) {
        include(utils.resolvePath('templates/upload-asset.jag'));
    } else {
        response.sendError(401, i18n.localize("designer.access.not.authorized"));
    }

}()); %>